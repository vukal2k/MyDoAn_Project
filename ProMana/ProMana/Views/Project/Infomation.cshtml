@model DTO.Project

@{
    ViewBag.Title = "Your Project";
    Layout = "~/Views/Shared/_LayoutProject.cshtml";
}


<h2>Infomation</h2>
<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap-select.css" rel="stylesheet" />

<div class="container">
    @using (Html.BeginForm("Infomation", "Project", FormMethod.Post, new { @id = "form" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="Id" value="@Model.Id"/>

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @{
                var errors = (List<string>
                    )ViewBag.Errors;
                if (errors != null && errors.Any())
                {
                    <ul class="list-group">
                        @foreach (var item in errors)
                        {
                            <li class="list-group-item-danger">@item</li>
                        }
                    </ul>
                }
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input name="Name" id="Name" type="text" class="form-control" value="@Model.Name" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">PM</label>
                <div class="col-md-10">
                    @{
                        string ownerValue = "";
                        if (Model != null && Model.Name != null)
                        {
                            ownerValue = Model.CreatedBy;
                        }
                    }
                    <select class="form-control" name="CreatedBy" id="CreatedBy">
                        <option value="0">-- Choose PM --</option>
                        @foreach (var item in (IEnumerable<DTO.UserInfo>)ViewBag.GetUserDoNotInProject)
                        {
                            if (item.UserName.Equals(ownerValue) && !string.IsNullOrEmpty(ownerValue))
                            {
                                <option value="@item.UserName" selected>@item.UserName</option>
                            }
                            else
                            {
                                <option value="@item.UserName">@item.UserName</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="text" onchange="ValidateDateTo()" autocomplete="off" value="@Model.From.ToString("MM/dd/yyyy")"  name="From" class="control-label col-md-3" id="from" style="margin-left:1.3% !important" />
                <input type="hidden" name="From" id="fromValue" />
                @{
                    string toValue = "";
                    if (Model != null && Model.To != null)
                    {
                        var dateTo = (DateTime)Model.To;
                        toValue = dateTo.ToString("MM/dd/yyyy");
                    }
                }
                @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="text" autocomplete="off" value="@toValue" class="control-label col-md-3" id="to" />
                <input type="hidden" name="To" id="toValue" />
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        string descriptionValue = "";
                        if (Model != null && Model.Description != null)
                        {
                            var des = Model.Description;
                            descriptionValue = des.ToString();
                        }
                    }
                    <textarea name="Description" id="Description" class="form-control">@descriptionValue</textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Members</label>
                <div class="col-md-10">
                    @{
                        var jobRoles = ViewBag.GetAllRole;
                        foreach (var item in jobRoles)
                        {
                            if (item.Id != 1)
                            {
                                <fieldset>
                                    <legend>@item.Title</legend>
                                    <div id="@string.Format("listMember{0}",item.Id)">
                                    </div>
                                </fieldset>
                            }
                        }
                    }
                    <label style="width:100% !important" onclick="$('#memberModal').modal('show')" class="btn btn-default"><i class="fas fa-plus-circle"></i></label>
                </div>
            </div>
            <input type="hidden" name="members" id="members" />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit" type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
</div>

<br />
<br />
<br />
<br />

<div id="memberModal" class="modal fade" role="dialog" data-backdrop="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="$('#memberModal').modal('hide')">&times;</button>
                <h4 class="modal-title">Add member</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <br />
                        <label>User</label><span style="color:red">*</span>
                        <br />
                        <div class="form-inline">
                            <select style="width:100%" type="text" id="user" class="form-control">
                                @{
                                    <option value="0"> -- Choose User --</option>
                                    var user = (IEnumerable
                                    <DTO.UserInfo>
                                        )ViewBag.GetUserDoNotInProject;
                                    foreach (var item in user)
                                    {
                                        <option value="@item.UserName"> @item.FullName (@item.UserName)</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <br />
                        <label>Role In Project</label><span style="color:red">*</span>
                        <br />
                        <div class="form-inline">
                            <select style="width:100%" type="text" id="role" class="form-control">
                                <option value="0"> -- Choose Role --</option>
                                @{
                                    var roles = (IEnumerable
                                    <DTO.JobRole>
                                        )ViewBag.GetSoftRole;
                                    foreach (var item in roles)
                                    {
                                        <option value="@item.Id"> @item.Title</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <br />
                        <label style="width:100% !important" onclick="AddProject()" class="btn btn-default"><i class="fas fa-plus-circle"></i></label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.datetimepicker.full.js"></script>
    <script src="~/Scripts/addMemberToProject.js"></script>
    <script>

    </script>
    <script>

        $(document).ready(function () {
            $("#sidebar4").addClass('active');
            $("#sidebar1").children().attr("href",'@Url.Action("KanbanBoard", "Project", new { id = Model.Id})')
            $("#linkSidebar21").attr("href",'@Url.Action("KanbanBoard", "Project", new { id = Model.Id})')
            $("#linkSidebar21").attr("href", '@Url.Action("TaskList", "Project", new { id = Model.Id})')

            $("#linkSidebar22").attr("href",'@Url.Action("KanbanBoard", "Project", new { id = Model.Id})')
            $("#linkSidebar22").attr("href", '@Url.Action("TaskList", "Project", new { id = Model.Id, createTask =true})')

            $("#linkSidebar31").attr("href",'@Url.Action("KanbanBoard", "Project", new { id = Model.Id})')
            $("#linkSidebar31").attr("href", '@Url.Action("Index", "Module", new { id = Model.Id})')

            $("#linkSidebar32").attr("href",'@Url.Action("KanbanBoard", "Project", new { id = Model.Id})')
            $("#linkSidebar32").attr("href", '@Url.Action("Create", "Module", new { id = Model.Id })')
            
            $("#sidebar41").attr("href",'@Url.Action("Infomation", "Project", new { id = Model.Id })')


            SelectMember('@Html.Raw(@ViewBag.GetMemberInProject)');
            $('#from').datetimepicker({
                timepicker: false,
                format: 'm/d/Y'
            });
            $('#to').datetimepicker({
                timepicker: false,
                format: 'm/d/Y'
            });

            $('#form').validate({
                errorClass: 'errors',
                rules: {
                    Name: {
                        required: true,
                        maxlength: 100
                    },
                    Code: {
                        required: true,
                        maxlength: 100
                    }
                },
                messages: {
                    Name: {
                        required: "Project name is required",
                        maxlength: "Max length is 100"
                    },
                    Code: {
                        required: "Project Code is required",
                        maxlength: "Max length is 100"
                    }
                },
                highlight: function (element) {
                    $(element).parent().addClass('has-error');
                },
                unhighlight: function (element) {
                    $(element).parent().removeClass('has-error');
                },
            });

            $("#submit").click(function () {
                $('#fromValue').val($('#from').val());
                $('#toValue').val($('#to').val());
                $("#members").val(JSON.stringify(listMemeberAndRole));
                return $("#form").valid();
            });

            if ("@ViewBag.isSuccess" === "True") {
                $.notify("Success!", "success");
            }
        });

        function ValidateDateTo() {
            $('#to').datetimepicker({
                format: 'm/d/Y',
                timepicker: false,
                minDate: new Date($('#from').val())
            });
        }
    </script>
}
