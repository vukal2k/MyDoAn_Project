@model DTO.Task
@using Microsoft.AspNet.Identity
@using COMMON
@{

}

<div class="container">
    <span class="h1">@Model.Title  </span> <label class="label label-default">@Model.TaskType</label>
    <br />
    <br />
    
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-6">
            @switch (Model.StatusId)
            {
                case COMMON.RequestStatusKey.PendingApproval:
                    if (Model.AssignedTo.Equals(User.Identity.GetUserName()))
                    {
                        <a class="btn btn-primary pull-right" style="margin-left:2%" onclick="chooseEditTask(@Model.Id)">Assign To</a>
                        <a class="btn btn-danger pull-right" style="margin-left:2%" onclick="chooseChangeStatusRequest(this,@Model.Id,@COMMON.RequestStatusKey.Rejected,'reject')">Reject</a>
                    }
                    else if (Model.CreatedBy.Equals(User.Identity.GetUserName()))
                    {
                        <a class="btn btn-danger pull-right" style="margin-left:2%" onclick="chooseChangeStatusRequest(this,@Model.Id,@COMMON.RequestStatusKey.Cancelled,'cancel')">Cancel</a>
                    }
                    break;
                default:
                    break;
            }
        </div>
    </div>
    <br />
    <br />
    <div class="row">
        <div class="col-md-7">
            <table class="table">
                <tbody>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Module</td>
                        <td>
                            @{ 
                                var title = Model.Module.Title;
                                if (title.Equals(HardFixJobRoleTitle.Watcher))
                                {
                                    title = "Project Manager";
                                }
                            }
                            @title
                        </td>
                    </tr>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Created By</td>
                        <td>
                            @Html.DisplayFor(model => model.CreatedBy)
                        </td>
                    </tr>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Reporting To</td>
                        <td>@Html.DisplayFor(model => model.AssignedTo)</td>
                    </tr>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Date</td>
                        <td>@Model.From - @Model.To</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            <table class="table">
                <tbody>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Severity</td>
                        <td>@Html.DisplayFor(model => model.Severity)</td>
                    </tr>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Priority</td>
                        <td>@Html.DisplayFor(model => model.Priority)</td>
                    </tr>
                    <tr>
                        <td class="text-success"><i class="fas fa-star"></i> Status</td>
                        <td>
                            @switch (Model.StatusId)
                            {
                                case COMMON.RequestStatusKey.PendingApproval:
                                    <label class="label label-default">@Model.LookupStatus.Name</label>
                                    break;
                                case COMMON.RequestStatusKey.Rejected:
                                    <label class="label label-danger">@Model.LookupStatus.Name</label>
                                    break;
                                case COMMON.RequestStatusKey.Approved:
                                    <label class="label label-success">@Model.LookupStatus.Name</label>
                                    break;
                                case COMMON.RequestStatusKey.Cancelled:
                                    <label class="label label-warning">@Model.LookupStatus.Name</label>
                                    break;
                                default:
                                    break;
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <label class="control-label text-success">Description</label>
    <p>@Model.Description</p>
</div>

@*<dl class="dl-horizontal">
    <dd>
        <span class="h1">@Model.Title  </span> <label class="label-default">@Model.TaskType</label>
    </dd>

    <dd>
        @switch (Model.StatusId)
        {
            case COMMON.RequestStatusKey.PendingApproval:
                if (Model.AssignedTo.Equals(User.Identity.GetUserName()))
                {
                    <a class="btn btn-primary pull-right" style="margin-left:2%" onclick="chooseEditTask(@Model.Id)">Assign To</a>
                    <a class="btn btn-danger pull-right" style="margin-left:2%">Reject</a>
                }
                else if (Model.CreatedBy.Equals(User.Identity.GetUserName()))
                {
                    <a class="btn btn-danger pull-right" style="margin-left:2%">Cancel</a>
                }
                break;
            default:
                break;
        }
    </dd>
    <dt>
        Module
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Module.Title)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.CreatedBy)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.CreatedBy)
    </dd>

    <dt>
        Reporting To
    </dt>

    <dd>
        @Html.DisplayFor(model => model.AssignedTo)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.From)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.From)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.To)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.To)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Severity)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Severity)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Priority)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Priority)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.StatusId)
    </dt>

    <dd>
        @switch (Model.StatusId)
        {
            case COMMON.RequestStatusKey.PendingApproval:
                <label class="label label-primary">@Model.LookupStatus.Name</label>
                break;
            case COMMON.RequestStatusKey.Rejected:
                <label class="label label-danger">@Model.LookupStatus.Name</label>
                break;
            default:
                break;
        }
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Description)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Description)
    </dd>

</dl>*@
@if (Model.CreatedBy.Equals(User.Identity.GetUserName()) || Model.AssignedTo.Equals(User.Identity.GetUserName()))
{
    <a class="aHover" onclick="chooseEditRequest(@Model.Id)">Edit</a>
}